{"version":3,"sources":["services/persons.js","components/PersonsList.js","components/Message.js","components/Filter.js","components/PersonForm.js","App.js","reportWebVitals.js","index.js"],"names":["serverUrl","defaultExport","getPersons","axios","get","then","response","data","createPerson","newPerson","post","deletePerson","personId","delete","updatePerson","put","id","PersonsList","persons","onDeleteClick","map","person","name","number","onClick","Message","message","type","className","Filter","filterTerm","onChange","value","PersonForm","newName","newNumber","onChangeName","onChangeNumber","onClickAdd","App","useState","setPersons","setNewName","setNewNumber","setFilterTerm","setMessage","useEffect","personService","personData","catch","error","console","personsToShow","filter","toLowerCase","includes","showMessage","setTimeout","event","target","preventDefault","some","window","confirm","existingPerson","find","changedPerson","concat","numberId","parseInt","dataset","updatedPersonArray","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.765747f6.chunk.js","sourcesContent":["import axios from \"axios\";\nconst serverUrl = \"/api/persons\";\n\nconst getPersons = () => {\n    const getRequest = axios.get(serverUrl);\n    return getRequest.then((response) => {\n        return response.data;\n    });\n};\n\nconst createPerson = (newPerson) => {\n    const postRequest = axios.post(serverUrl, newPerson);\n    return postRequest.then((response) => {\n        return response.data;\n    });\n};\n\nconst deletePerson = (personId) => {\n    const deleteRequest = axios.delete(`${serverUrl}/${personId}`);\n    return deleteRequest.then((response) => {\n        return response.data;\n    });\n};\n\nconst updatePerson = (newPerson) => {\n    const putRequest = axios.put(`${serverUrl}/${newPerson.id}`, newPerson);\n    return putRequest.then((response) => {\n        return response.data;\n    });\n};\n\nconst defaultExport = { getPersons, createPerson, deletePerson, updatePerson };\nexport default defaultExport;\n","import React from \"react\";\n\nconst PersonsList = ({ persons, onDeleteClick }) => {\n    return (\n        <div>\n            <h2>Numbers</h2>\n            {persons.map((person) => (\n                <p key={person.name}>\n                    {person.name} {person.number}{\" \"}\n                    <button onClick={onDeleteClick} data-id={person.id} data-name={person.name}>\n                        Delete\n                    </button>\n                </p>\n            ))}\n        </div>\n    );\n};\n\nexport default PersonsList;\n","import \"../index.css\";\nconst Message = ({ message, type }) => {\n    if (message) {\n        return <div className={type === \"success\" ? \"successMessage\" : \"errorMessage\"}>{message}</div>;\n    }\n    return null;\n};\n\nexport default Message;\n","import React from \"react\";\n\nconst Filter = ({ filterTerm, onChange }) => {\n  return (\n    <div>\n      filter shown with <input value={filterTerm} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  newName,\n  newNumber,\n  onChangeName,\n  onChangeNumber,\n  onClickAdd,\n}) => {\n  return (\n    <div>\n      <h1>add a new </h1>\n      <form>\n        <div>\n          name: <input value={newName} onChange={onChangeName} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={onChangeNumber} />\n        </div>\n        <div>\n          <button type=\"submit\" onClick={onClickAdd}>\n            add\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport { Filter, PersonForm, PersonsList, Message } from \"./components/index\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\");\n    const [filterTerm, setFilterTerm] = useState(\"\");\n    const [message, setMessage] = useState({ message: null, type: null });\n\n    const effectHook = () => {\n        personService\n            .getPersons()\n            .then((personData) => {\n                setPersons(personData);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    };\n\n    useEffect(effectHook, []);\n\n    const personsToShow = persons.filter((person) => person.name.toLowerCase().includes(filterTerm.toLowerCase()));\n\n    const handleOnClick = (event) => {\n        event.preventDefault();\n\n        if (!persons.some((person) => person.name === newName)) {\n            const newPerson = {\n                name: newName,\n                number: newNumber,\n            };\n            personService\n                .createPerson(newPerson)\n                .then((response) => {\n                    setPersons(persons.concat(response));\n                    showMessage({ message: `Added ${response.name}`, type: \"success\" });\n                })\n                .catch((error) => {\n                    showMessage({\n                        message: `Add Operation failed: ${error.message}`,\n                        type: \"error\",\n                    });\n                });\n        } else {\n            const confirmResult = window.confirm(\n                `${newName} is already added to phonebook, replace the old number with a new one?`\n            );\n\n            if (confirmResult) {\n                const existingPerson = persons.find((person) => person.name === newName);\n                const changedPerson = { ...existingPerson, number: newNumber };\n\n                personService\n                    .updatePerson(changedPerson)\n                    .then((response) => {\n                        setPersons(persons.map((person) => (person.id !== changedPerson.id ? person : changedPerson)));\n                        showMessage({ message: `Updated ${changedPerson.name}'s number`, type: \"success\" });\n                    })\n                    .catch((error) => {\n                        showMessage({\n                            message: `Update Operation failed: ${changedPerson.name} was already removed`,\n                            type: \"error\",\n                        });\n                    });\n            }\n        }\n\n        setNewName(\"\");\n        setNewNumber(\"\");\n    };\n\n    const showMessage = (message) => {\n        setMessage(message);\n        setTimeout(() => {\n            setMessage({ message: null, type: null });\n        }, 4000);\n    };\n\n    const handleOnChangeName = (event) => {\n        setNewName(event.target.value);\n    };\n\n    const handleOnChangeNumber = (event) => {\n        setNewNumber(event.target.value);\n    };\n\n    const handleOnChangeFilter = (event) => {\n        setFilterTerm(event.target.value);\n    };\n\n    const handleDeleteClick = (event) => {\n        const numberId = parseInt(event.target.dataset.id);\n        const confirmResponse = window.confirm(`Delete ${event.target.dataset.name}?`);\n        if (confirmResponse) {\n            personService\n                .deletePerson(numberId)\n                .then(() => {\n                    const updatedPersonArray = persons.filter((person) => {\n                        return person.id !== numberId;\n                    });\n                    showMessage({ message: `Removed ${event.target.dataset.name}`, type: \"success\" });\n                    setPersons(updatedPersonArray);\n                })\n                .catch((error) => {\n                    showMessage({\n                        message: `Delete Operation failed: ${event.target.dataset.name} was already removed`,\n                        type: \"error\",\n                    });\n                });\n        }\n    };\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Message message={message.message} type={message.type} />\n            <Filter filterTerm={filterTerm} onChange={handleOnChangeFilter} />\n            <PersonForm\n                newName={newName}\n                newNumber={newNumber}\n                onChangeName={handleOnChangeName}\n                onChangeNumber={handleOnChangeNumber}\n                onClickAdd={handleOnClick}\n            />\n            <PersonsList persons={personsToShow} onDeleteClick={handleDeleteClick} />\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}